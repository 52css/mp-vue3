import{_ as s,c as n,o as a,a4 as o}from"./chunks/framework.DsvKXnjw.js";const F=JSON.parse('{"title":"storeToRefs","description":"","frontmatter":{},"headers":[],"relativePath":"框架接口/状态机 Pinia/storeToRefs.md","filePath":"框架接口/状态机 Pinia/storeToRefs.md"}'),l={name:"框架接口/状态机 Pinia/storeToRefs.md"},p=o(`<h1 id="storetorefs" tabindex="-1">storeToRefs <a class="header-anchor" href="#storetorefs" aria-label="Permalink to &quot;storeToRefs&quot;">​</a></h1><h2 id="页面如何使用" tabindex="-1">页面如何使用 <a class="header-anchor" href="#页面如何使用" aria-label="Permalink to &quot;页面如何使用&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-B3twh" id="tab-TC0Kukq" checked><label for="tab-TC0Kukq">pinia.ts</label><input type="radio" name="group-B3twh" id="tab-wIaWjCv"><label for="tab-wIaWjCv">pinia.wxml</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { definePage, storeToRefs } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &quot;@52css/mp-vue3&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { useCounterStore } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &quot;../../store/counter&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">definePage</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#B392F0;">  setup</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> counterStore</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useCounterStore</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">count</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> storeToRefs</span><span style="color:#E1E4E8;">(counterStore);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;🚀 ~ definePage ~ setup ~ count:&quot;</span><span style="color:#E1E4E8;">, count);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      count,</span></span>
<span class="line"><span style="color:#B392F0;">      increment</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        counterStore.</span><span style="color:#B392F0;">increment</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#B392F0;">      decrement</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        counterStore.</span><span style="color:#B392F0;">decrement</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#B392F0;">      asyncIncrement</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        counterStore.</span><span style="color:#B392F0;">asyncIncrement</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> bind:tap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;decrement&quot;</span><span style="color:#E1E4E8;">&gt;-&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;{{ count }}&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> bind:tap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;increment&quot;</span><span style="color:#E1E4E8;">&gt;+&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> bind:tap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;asyncIncrement&quot;</span><span style="color:#E1E4E8;">&gt;++&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div></div></div><h2 id="组件如何使用" tabindex="-1">组件如何使用 <a class="header-anchor" href="#组件如何使用" aria-label="Permalink to &quot;组件如何使用&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-Nv9BV" id="tab-CgxNmQE" checked><label for="tab-CgxNmQE">pinia.ts</label><input type="radio" name="group-Nv9BV" id="tab-wuR3zdX"><label for="tab-wuR3zdX">pinia.wxml</label></div><div class="blocks"><div class="language-ts active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { defineComponent, storeToRefs } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &quot;@52css/mp-vue3&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { useCounterStore } </span><span style="color:#F97583;">from</span><span style="color:#9ECBFF;"> &quot;../../../../store/counter&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">defineComponent</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">  properties: {</span></span>
<span class="line"><span style="color:#E1E4E8;">    xClass: String,</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#B392F0;">  setup</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#79B8FF;"> counterStore</span><span style="color:#F97583;"> =</span><span style="color:#B392F0;"> useCounterStore</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#F97583;">    const</span><span style="color:#E1E4E8;"> { </span><span style="color:#79B8FF;">count</span><span style="color:#E1E4E8;"> } </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> storeToRefs</span><span style="color:#E1E4E8;">(counterStore);</span></span>
<span class="line"><span style="color:#E1E4E8;">    console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&quot;🚀 ~ defineComponent ~ setup ~ count:&quot;</span><span style="color:#E1E4E8;">, count);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">    return</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">      count,</span></span>
<span class="line"><span style="color:#B392F0;">      increment</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        counterStore.</span><span style="color:#B392F0;">increment</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#B392F0;">      decrement</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        counterStore.</span><span style="color:#B392F0;">decrement</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#B392F0;">      asyncIncrement</span><span style="color:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#E1E4E8;">        counterStore.</span><span style="color:#B392F0;">asyncIncrement</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"><span style="color:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#E1E4E8;">    };</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> bind:tap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;decrement&quot;</span><span style="color:#E1E4E8;">&gt;-&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;{{ count }}&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> bind:tap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;increment&quot;</span><span style="color:#E1E4E8;">&gt;+&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">button</span><span style="color:#B392F0;"> bind:tap</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;asyncIncrement&quot;</span><span style="color:#E1E4E8;">&gt;++&lt;/</span><span style="color:#85E89D;">button</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre></div></div></div>`,5),e=[p];function t(c,r,E,y,i,u){return a(),n("div",null,e)}const b=s(l,[["render",t]]);export{F as __pageData,b as default};
